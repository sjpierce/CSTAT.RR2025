[
  {
    "objectID": "MyStudy_Report.html",
    "href": "MyStudy_Report.html",
    "title": " \nMyStudy Report",
    "section": "",
    "text": "This report summarizes findings from analyses of the MyStudy data, which is simulated, fictional example data for my presentation (Pierce, 2025, March 6). It is formatted the way I would handle an internal report for the study team rather than how I would handle a deliverable to an external stakeholder, so it emphasizes clarity and technical detail for repeatability, reproducibility, and teaching purposes.\n\n\n\n\n\n\nNote\n\n\n\nThis report illustrates how Quarto scripts act as dynamic documents. It shows some (but by no means all) of the things they can do. This box is a Quarto callout block. There are several variations of callouts that have different formatting, icons, and labels.\n\n\n\n\n\n\n\n\nTip\n\n\n\nWe can format body text in a bold font by surrounding it with double asterisks. Using a single asterisk on each side would italicize the text instead. To format the previous two sentences, I put the following in the script:\nWe can format body text in a **bold font** by surrounding it with double \nasterisks. Using a single asterisk on each side would *italicize* the text \ninstead."
  },
  {
    "objectID": "MyStudy_Report.html#declare-path",
    "href": "MyStudy_Report.html#declare-path",
    "title": " \nMyStudy Report",
    "section": "2.1 Declare Path",
    "text": "2.1 Declare Path\nThis next chunk declares the path to this script relative to the project-level root directory. If the file is not in the right location under the project root you’ll get a warning message. This helps ensure relative paths are all working as expected.\n\n\nCode\n```{r}\n#| label: declare-path\n\n# Declare path to this script relative to the project root directory.\nhere::i_am(path = paste0(params$SourceDir, params$SourceFile))\n```\n\n\nhere() starts at C:/Users/pierces1/OneDrive - Michigan State University/CSTATRedirects/Documents/Professional/Presentations/CSTAT.RR2025\n\n\n\n\n\n\n\n\nTip\n\n\n\nFor this chunk to work, you must have the relevant parameters set properly in the YAML header.\n\nThe SourceDir parameter should be a text string with the the relative path from the RStudio project root folder to the folder where this file is stored.\nThe SourceFile parameter should be a text string containing the name of this file.\nYou can use the parameter values in R code by prefixing their names with params$ as shown in the chunk above."
  },
  {
    "objectID": "MyStudy_Report.html#load-packages",
    "href": "MyStudy_Report.html#load-packages",
    "title": " \nMyStudy Report",
    "section": "2.2 Load Packages",
    "text": "2.2 Load Packages\nR packages usually add new functions to the base R software, allowing you to do more things. Here, we load the specific R packages required for this script to work. Showing this section in your report is an example of documenting methods details about the software you are using.\n\n\nCode\n```{r}\n#| label: load-packages\n\nlibrary(here)           # for here(), to make code more portable \nlibrary(devtools)       # for session_info()\n```\n\n\nLoading required package: usethis\n\n\nCode\n```{r}\n#| label: load-packages\n\nlibrary(rmarkdown)      # for pandoc_version()\nlibrary(knitr)          # for kable()\nlibrary(dplyr)          # for %&gt;%, bind_cols(), rename(), etc.\n```\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\n```{r}\n#| label: load-packages\n\noptions(kableExtra.latex.load_packages = FALSE)\nlibrary(kableExtra)     # for kable_styling(), add_header_above(), \n```\n\n\n\nAttaching package: 'kableExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\n\nCode\n```{r}\n#| label: load-packages\n\n                        # column_spec(), row_spec()\nlibrary(ggplot2)        # for scale_x_continuous()\nlibrary(car)            # for Anova()\n```\n\n\nLoading required package: carData\n\n\n\nAttaching package: 'car'\n\n\nThe following object is masked from 'package:dplyr':\n\n    recode\n\n\nCode\n```{r}\n#| label: load-packages\n\nlibrary(broom)          # for glance(), tidy()\nlibrary(emmeans)        # for emmeans()\n```\n\n\nWelcome to emmeans.\nCaution: You lose important information if you filter this package's results.\nSee '? untidy'\n\n\n\nAttaching package: 'emmeans'\n\n\nThe following object is masked from 'package:devtools':\n\n    test\n\n\nCode\n```{r}\n#| label: load-packages\n\nlibrary(modelsummary)   # for modelsummary()\noptions(modelsummary_factory_html = 'kableExtra')\nlibrary(piercer)        # for git_report(), sim_2arm_prepost()\nlibrary(quarto)         # for quarto_version()\n```"
  },
  {
    "objectID": "MyStudy_Report.html#load-data",
    "href": "MyStudy_Report.html#load-data",
    "title": " \nMyStudy Report",
    "section": "2.3 Load Data",
    "text": "2.3 Load Data\nFollowing the separation principle, the data are stored separate from the code that manages or analyzes them. So, we need to load the MyStudy data from an *.RData file stored in the local repository. That will overwrite any objects already in memory that have the same names as the objects being loaded.\n\n\n\n\n\n\nImportant\n\n\n\nRun the Create_MyStudy_Data.qmd script to create the data file loaded below.\n\n\n\n\nCode\n```{r}\n#| label: load-MyStudy-data\n\nload(file=here(\"data/MyStudy.RData\"))\n```"
  },
  {
    "objectID": "MyStudy_Report.html#study-design",
    "href": "MyStudy_Report.html#study-design",
    "title": " \nMyStudy Report",
    "section": "3.1 Study Design",
    "text": "3.1 Study Design\nThe study used a longitudinal randomized controlled trial design with 2 groups (Treatment vs. Control) x 4 sites (A, B, C, and D) x 2 time points (pretest vs.  posttest). Potential participants were recruited and screened for eligibility. Eligible individuals who consented to participate were enrolled, then given the pretest before being randomly assigned to either the treatment or control group. The treatment group then received a 9-week intervention intended to increase outcome scores. The control group did not receive any intervention. After the 9 week intervention period, both groups were given the posttest. The study design can be visualized with Shadish, Cook, & Campbell’s (2002) design notation, as shown in Table 1.\n\nCode\n```{r}\n#| label: tbl-study-design\n#| tbl-cap: MyStudy Experimental Research Design\n#| results: asis\n\nStudyDesign &lt;- data.frame(Group = c(\"Treatment\", \"Control\"),\n                          Pretest = rep(\"$O_1$\", times = 2),\n                          Allocation = rep(\"$R$\", times = 2),\n                          Intervention = c(\"$X$\", \"\"),\n                          Posttest = rep(\"$O_2$\", times = 2)) \n\nFN &lt;- paste(\"The same design was used within each of 4 sites (A, B, C, & D).\", \n            \"$O_i$, observed data at time $i$;\", \n            \"$R$, randomized;\",\n            \"$X$, delivery of intervention (9 weeks).\")\nkable(StudyDesign, format = \"html\", escape = FALSE, align = \"lcccc\") %&gt;% \n  kable_styling(full_width = FALSE) %&gt;% \n  add_header_above(c(\" \", \"Longitudinal Event\" = 4), escape = FALSE) %&gt;% \n  footnote(general = FN, general_title = \"Note: \", footnote_as_chunk = TRUE,\n           threeparttable = FALSE, escape = FALSE) %&gt;% \n  cat()\n```\n\n\n\n\nTable 1: MyStudy Experimental Research Design\n\n\n\n\n\n\n\n\n\nLongitudinal Event\n\n\n\n\n\nGroup\n\n\nPretest\n\n\nAllocation\n\n\nIntervention\n\n\nPosttest\n\n\n\n\n\n\nTreatment\n\n\n\\(O_1\\)\n\n\n\\(R\\)\n\n\n\\(X\\)\n\n\n\\(O_2\\)\n\n\n\n\nControl\n\n\n\\(O_1\\)\n\n\n\\(R\\)\n\n\n\n\n\\(O_2\\)\n\n\n\n\n\n\nNote:   The same design was used within each of 4 sites (A, B, C, & D). \\(O_i\\), observed data at time \\(i\\); \\(R\\), randomized; \\(X\\), delivery of intervention (9 weeks).\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nQuarto allows you to automate numbering tables. Just give the chunk that generates a table a unique label with the prefix tbl- and then insert a cross-reference into the script’s body text. The cross-reference for Table 1 is @tbl-study-design, which is just the label of the chunk prefixed by an @ sign.\n\n\n\n\n\n\n\n\nTip\n\n\n\nSuppose I want to show how many participants there are broken down by group and site as a means of further describing the study design. Integrating a chunk of R code into the document will automate inserting its results into the output. Here’s an example where I just use a pair of R functions to look at the relevant crosstab.\n\n\nCode\n```{r}\n#| label: xtab-sample-size\n\nMyStudy %&gt;% \n  xtabs(~Site + Group, data = .) %&gt;% \n  addmargins()\n```\n\n\n     Group\nSite  Ctl Trt Sum\n  A    20  20  40\n  B    20  20  40\n  C    20  20  40\n  D    20  20  40\n  Sum  80  80 160\n\n\nThe result is functional and accurate output that preserves methodology details (i.e., code). That might be sufficient if our only audience is going to be people who are used to reading raw R output, but with just a little more code, we can get a publication-quality result, as shown next.\n\n\nMeanwhile, Table 2 shows the sample size by group and site.\n\nCode\n```{r}\n#| label: tbl-sample-size\n#| tbl-cap: Number of Participants by Group and Site\n#| results: asis\n\nFN = \"This is fictional example data.\"\n\nMyStudy %&gt;% \n  xtabs(~Site + Group, data = .) %&gt;% \n  addmargins() %&gt;% \n  kable(col.names = c(\"Site\", \"Control\", \"Treatment\", \"Sum\")) %&gt;% \n  kable_styling(full_width = FALSE) %&gt;% \n  column_spec(column = 4, italic = TRUE) %&gt;% \n  row_spec(row = 5, italic = TRUE) %&gt;% \n  add_header_above(header = c(\" \", \"Group\" = 2, \" \")) %&gt;% \n  footnote(general = FN, general_title = \"Note: \", footnote_as_chunk = TRUE) %&gt;% \n  cat()\n```\n\n\n\n\nTable 2: Number of Participants by Group and Site\n\n\n\n\n\n\n\n\n\nGroup\n\n\n\n\n\n\n\nSite\n\n\nControl\n\n\nTreatment\n\n\nSum\n\n\n\n\n\n\nA\n\n\n20\n\n\n20\n\n\n40\n\n\n\n\nB\n\n\n20\n\n\n20\n\n\n40\n\n\n\n\nC\n\n\n20\n\n\n20\n\n\n40\n\n\n\n\nD\n\n\n20\n\n\n20\n\n\n40\n\n\n\n\nSum\n\n\n80\n\n\n80\n\n\n160\n\n\n\n\n\n\nNote:   This is fictional example data.\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nNotice that we have automated doing several things:\n\nNumbered the table via the label: Quarto chunk option.\nAdded a meaningful caption via the tbl-cap: Quarto chunk option.\nInserted the table number into the text above (as a hyperlink to the table itself) via a cross-reference.\nAdded a column grouping header.\nImproved the column labels.\nAdded a footnote.\nFormatted the sums with italics.\n\nI used the knitr and kableExtra R packages to format Table 2. Consider how long it would take you to turn the raw result I showed first into table in a Word document, then format it like Table 2. Automating such formatting work can save you time. If the underlying data changes, we can update Table 2 just by re-rendering the script."
  },
  {
    "objectID": "MyStudy_Report.html#measures",
    "href": "MyStudy_Report.html#measures",
    "title": " \nMyStudy Report",
    "section": "3.2 Measures",
    "text": "3.2 Measures\nWe have the following variables in the available dataset.\n\n3.2.1 Participant ID (PID)\nEach participant received a unique, sequential integer identification number.\n\n\n3.2.2 Group (Group)\nGroup is a nominal categorical factor with levels of Treatment and Control, with Control as the reference level.\n\n\n3.2.3 Recruitment Site (Site)\nSite is a nominal, categorical factor with levels of A, B, C, D, with A serving as the reference level.\n\n\n3.2.4 Outcome Scores (Score_Pre & Score_Post)\nOutcome scores were measured twice with continuous scale scores, once at pretest and once at posttest, using the same instrument. High scores represent better outcomes for the participants than low scores. Based on prior research, we expect at least modest correlation between pretest and posttest scores over the 9-week duration of the study."
  },
  {
    "objectID": "MyStudy_Report.html#statistical-analysis-plan",
    "href": "MyStudy_Report.html#statistical-analysis-plan",
    "title": " \nMyStudy Report",
    "section": "3.3 Statistical Analysis Plan",
    "text": "3.3 Statistical Analysis Plan\nThe main objective of MyStudy is to test whether the intervention increased posttest outcome scores after controlling for pretest scores and recruitment site. We can use an analysis of covariance (ANCOVA) where group, site, and pretest scores predict the outcome scores to do that (Vickers & Altman, 2001). A secondary objective is to test whether the sites differ with respect to outcomes. In the ANCOVA model, the group effect and associated contrast between the estimated marginal means for the two groups will directly allow us to examine the intervention effect (Vickers & Altman, 2001).\nTo improve interpretation of model parameters, we will use a mean-centered form of the pretest scores (i.e., the variable Centered_Score_Pre instead of Score_Pre) (Aiken & West, 1991).\nWe will use effect coding for the categorical factors (which is also called sum contrast coding) (Schad et al., 2020). By default, R uses treatment dummy coding for factors, which we can see by checking the current contrast coding for group and site. For site, the default contrast coding is shown below.\n\n\nCode\n```{r}\n#| label: check-contrasts-Group\n\n# Default contrast coding for categorical factors.\ncontrasts(MyStudy$Group) \n```\n\n\n    Trt\nCtl   0\nTrt   1\n\n\nNext, we show the default contrast coding for site.\n\n\nCode\n```{r}\n#| label: check-contrasts-Site\n\n# Default contrast coding for categorical factors.\ncontrasts(MyStudy$Site) \n```\n\n\n  B C D\nA 0 0 0\nB 1 0 0\nC 0 1 0\nD 0 0 1\n\n\nWe change to effect coding then display the updated contrast codes in the next two chunks below.\n\n\nCode\n```{r}\n#| label: set-effect-coding-Group\n\ncontrasts(MyStudy$Group) &lt;- matrix(data = c(-1, 1), \n                                   byrow = TRUE, nrow = 2, ncol = 1,\n                                   dimnames = list(c(\"Ctl\", \"Trt\"),\n                                                   c(\"Treatment\")))  \ncontrasts(MyStudy$Group) # Updated\n```\n\n\n    Treatment\nCtl        -1\nTrt         1\n\n\n\n\nCode\n```{r}\n#| label: set-effect-coding-Site\n\ncontrasts(MyStudy$Site) &lt;-   matrix(data = c(-1, -1, -1,\n                                              1,  0,  0,\n                                              0,  1,  0,\n                                              0,  0,  1), \n                                  byrow = TRUE, nrow = 4, ncol = 3,\n                                  dimnames = list(c(\"A\", \"B\", \"C\", \"D\"),\n                                                  c(\"B\", \"C\", \"D\")))\ncontrasts(MyStudy$Site) # Updated\n```\n\n\n   B  C  D\nA -1 -1 -1\nB  1  0  0\nC  0  1  0\nD  0  0  1\n\n\nNote that contrast coding does not affect the Wald tests of individual parameters, the overall model fit, or Type II sums of squares (SS) tests for the significance of predictors. It does however change the value and meaning of the intercept and of parameter estimates associated with categorical factors (Schad et al., 2020). With effect coding for categorical factors, the intercept estimates the grand mean when continuous predictors are set to 0. Factor parameter estimates test whether the means of individual levels differ from the grand mean. Regardless of contrast coding, one can still obtain estimated marginal means for the levels of factors and perform contrasts between them.\nTo test for the effects of categorical factors with more than two levels (e.g., site), we will use Type II ANOVA tests (Hector et al., 2010; Langsrud, 2003). Because there are no interactions in the model, these can be interpreted as the main effect of the indicated predictor after controlling for the other predictors in the model. They would be valid even if there were unbalanced sample sizes across cells in the factorial design."
  },
  {
    "objectID": "MyStudy_Report.html#versions",
    "href": "MyStudy_Report.html#versions",
    "title": " \nMyStudy Report",
    "section": "6.1 Versions",
    "text": "6.1 Versions\nThis document was generated using the following computational environment and dependencies:\n\n\nCode\n```{r}\n#| label: show-version\n\n# Get R and R package version numbers in use.\nsession_info()\n```\n\n\nWarning in system2(\"quarto\", \"-V\", stdout = TRUE, env = paste0(\"TMPDIR=\", :\nrunning command '\"quarto\"\nTMPDIR=C:/Users/pierces1/AppData/Local/Temp/RtmpSuMiRm/file74cc22e917fe -V' had\nstatus 1\n\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.2 (2024-10-31 ucrt)\n os       Windows 11 x64 (build 22621)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  English_United States.utf8\n ctype    English_United States.utf8\n tz       America/New_York\n date     2025-02-26\n pandoc   3.2 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n quarto   NA @ C:\\\\PROGRA~1\\\\Quarto\\\\bin\\\\quarto.exe\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package      * version  date (UTC) lib source\n abind          1.4-8    2024-09-12 [1] CRAN (R 4.4.1)\n assertthat     0.2.1    2019-03-21 [1] CRAN (R 4.4.0)\n backports      1.5.0    2024-05-23 [1] CRAN (R 4.4.0)\n bayestestR     0.15.2   2025-02-07 [1] CRAN (R 4.4.2)\n broom        * 1.0.7    2024-09-26 [1] CRAN (R 4.4.1)\n cachem         1.1.0    2024-05-16 [1] CRAN (R 4.4.0)\n car          * 3.1-3    2024-09-27 [1] CRAN (R 4.4.1)\n carData      * 3.0-5    2022-01-06 [1] CRAN (R 4.4.0)\n checkmate      2.3.2    2024-07-29 [1] CRAN (R 4.4.1)\n cli            3.6.4    2025-02-13 [1] CRAN (R 4.4.2)\n coda           0.19-4.1 2024-01-31 [1] CRAN (R 4.4.0)\n codetools      0.2-20   2024-03-31 [1] CRAN (R 4.4.0)\n colorspace     2.1-1    2024-07-26 [1] CRAN (R 4.4.1)\n data.table     1.16.4   2024-12-06 [1] CRAN (R 4.4.2)\n datawizard     1.0.0    2025-01-10 [1] CRAN (R 4.4.2)\n devtools     * 2.4.5    2022-10-11 [1] CRAN (R 4.4.0)\n digest         0.6.37   2024-08-19 [1] CRAN (R 4.4.1)\n dplyr        * 1.1.4    2023-11-17 [1] CRAN (R 4.4.0)\n effectsize     1.0.0    2024-12-10 [1] CRAN (R 4.4.2)\n ellipsis       0.3.2    2021-04-29 [1] CRAN (R 4.4.0)\n emmeans      * 1.10.7   2025-01-31 [1] CRAN (R 4.4.2)\n estimability   1.5.1    2024-05-12 [1] CRAN (R 4.4.0)\n evaluate       1.0.3    2025-01-10 [1] CRAN (R 4.4.2)\n farver         2.1.2    2024-05-13 [1] CRAN (R 4.4.0)\n fastmap        1.2.0    2024-05-15 [1] CRAN (R 4.4.0)\n forcats        1.0.0    2023-01-29 [1] CRAN (R 4.4.0)\n Formula        1.2-5    2023-02-24 [1] CRAN (R 4.4.0)\n fs             1.6.5    2024-10-30 [1] CRAN (R 4.4.1)\n future         1.34.0   2024-07-29 [1] CRAN (R 4.4.1)\n future.apply   1.11.3   2024-10-27 [1] CRAN (R 4.4.1)\n generics       0.1.3    2022-07-05 [1] CRAN (R 4.4.0)\n ggplot2      * 3.5.1    2024-04-23 [1] CRAN (R 4.4.0)\n git2r          0.35.0   2024-10-20 [1] CRAN (R 4.4.1)\n globals        0.16.3   2024-03-08 [1] CRAN (R 4.4.0)\n glue           1.8.0    2024-09-30 [1] CRAN (R 4.4.1)\n gtable         0.3.6    2024-10-25 [1] CRAN (R 4.4.1)\n haven          2.5.4    2023-11-30 [1] CRAN (R 4.4.0)\n here         * 1.0.1    2020-12-13 [1] CRAN (R 4.4.0)\n hms            1.1.3    2023-03-21 [1] CRAN (R 4.4.0)\n htmltools      0.5.8.1  2024-04-04 [1] CRAN (R 4.4.0)\n htmlwidgets    1.6.4    2023-12-06 [1] CRAN (R 4.4.0)\n httpuv         1.6.15   2024-03-26 [1] CRAN (R 4.4.0)\n httr           1.4.7    2023-08-15 [1] CRAN (R 4.4.0)\n insight        1.0.2    2025-02-06 [1] CRAN (R 4.4.2)\n jsonlite       1.9.0    2025-02-19 [1] CRAN (R 4.4.2)\n kableExtra   * 1.4.0    2024-01-24 [1] CRAN (R 4.4.0)\n knitr        * 1.49     2024-11-08 [1] CRAN (R 4.4.2)\n later          1.4.1    2024-11-27 [1] CRAN (R 4.4.2)\n lattice        0.22-6   2024-03-20 [1] CRAN (R 4.4.0)\n lifecycle      1.0.4    2023-11-07 [1] CRAN (R 4.4.0)\n listenv        0.9.1    2024-01-29 [1] CRAN (R 4.4.0)\n lmtest         0.9-40   2022-03-21 [1] CRAN (R 4.4.0)\n magrittr       2.0.3    2022-03-30 [1] CRAN (R 4.4.0)\n MASS           7.3-64   2025-01-04 [1] CRAN (R 4.4.2)\n Matrix         1.7-2    2025-01-23 [1] CRAN (R 4.4.2)\n MBESS          4.9.3    2023-10-26 [1] CRAN (R 4.4.0)\n memoise        2.0.1    2021-11-26 [1] CRAN (R 4.4.0)\n mime           0.12     2021-09-28 [1] CRAN (R 4.4.0)\n miniUI         0.1.1.1  2018-05-18 [1] CRAN (R 4.4.0)\n modelsummary * 2.3.0    2025-02-02 [1] CRAN (R 4.4.2)\n multcomp       1.4-28   2025-01-29 [1] CRAN (R 4.4.2)\n munsell        0.5.1    2024-04-01 [1] CRAN (R 4.4.0)\n mvtnorm        1.3-3    2025-01-10 [1] CRAN (R 4.4.2)\n parallelly     1.42.0   2025-01-30 [1] CRAN (R 4.4.2)\n parameters     0.24.1   2025-01-14 [1] CRAN (R 4.4.2)\n pbivnorm       0.6.0    2015-01-23 [1] CRAN (R 4.4.0)\n performance    0.13.0   2025-01-15 [1] CRAN (R 4.4.2)\n piercer      * 0.18.0   2024-12-30 [1] Github (sjpierce/piercer@c5c8f3d)\n pillar         1.10.1   2025-01-07 [1] CRAN (R 4.4.2)\n pkgbuild       1.4.6    2025-01-16 [1] CRAN (R 4.4.2)\n pkgconfig      2.0.3    2019-09-22 [1] CRAN (R 4.4.0)\n pkgload        1.4.0    2024-06-28 [1] CRAN (R 4.4.1)\n plyr           1.8.9    2023-10-02 [1] CRAN (R 4.4.0)\n pROC           1.18.5   2023-11-01 [1] CRAN (R 4.4.0)\n processx       3.8.5    2025-01-08 [1] CRAN (R 4.4.2)\n profvis        0.4.0    2024-09-20 [1] CRAN (R 4.4.1)\n promises       1.3.2    2024-11-28 [1] CRAN (R 4.4.2)\n ps             1.9.0    2025-02-18 [1] CRAN (R 4.4.2)\n purrr          1.0.4    2025-02-05 [1] CRAN (R 4.4.2)\n quarto       * 1.4.4    2024-07-20 [1] CRAN (R 4.4.1)\n R6             2.6.1    2025-02-15 [1] CRAN (R 4.4.2)\n Rcpp           1.0.14   2025-01-12 [1] CRAN (R 4.4.2)\n remotes        2.5.0    2024-03-17 [1] CRAN (R 4.4.0)\n rlang          1.1.5    2025-01-17 [1] CRAN (R 4.4.2)\n rmarkdown    * 2.29     2024-11-04 [1] CRAN (R 4.4.2)\n rprojroot      2.0.4    2023-11-05 [1] CRAN (R 4.4.0)\n rstudioapi     0.17.1   2024-10-22 [1] CRAN (R 4.4.1)\n sandwich       3.1-1    2024-09-15 [1] CRAN (R 4.4.1)\n scales         1.3.0    2023-11-28 [1] CRAN (R 4.4.0)\n sessioninfo    1.2.3    2025-02-05 [1] CRAN (R 4.4.2)\n shiny          1.10.0   2024-12-14 [1] CRAN (R 4.4.2)\n stringi        1.8.4    2024-05-06 [1] CRAN (R 4.4.0)\n stringr        1.5.1    2023-11-14 [1] CRAN (R 4.4.0)\n survival       3.8-3    2024-12-17 [1] CRAN (R 4.4.2)\n svglite        2.1.3    2023-12-08 [1] CRAN (R 4.4.0)\n systemfonts    1.2.1    2025-01-20 [1] CRAN (R 4.4.2)\n tables         0.9.31   2024-08-29 [1] CRAN (R 4.4.1)\n texreg         1.39.4   2024-07-24 [1] CRAN (R 4.4.1)\n TH.data        1.1-3    2025-01-17 [1] CRAN (R 4.4.2)\n tibble         3.2.1    2023-03-20 [1] CRAN (R 4.4.0)\n tidyr          1.3.1    2024-01-24 [1] CRAN (R 4.4.0)\n tidyselect     1.2.1    2024-03-11 [1] CRAN (R 4.4.0)\n tinytex        0.55     2025-02-19 [1] CRAN (R 4.4.2)\n urlchecker     1.0.1    2021-11-30 [1] CRAN (R 4.4.0)\n usethis      * 3.1.0    2024-11-26 [1] CRAN (R 4.4.2)\n vctrs          0.6.5    2023-12-01 [1] CRAN (R 4.4.0)\n viridisLite    0.4.2    2023-05-02 [1] CRAN (R 4.4.0)\n withr          3.0.2    2024-10-28 [1] CRAN (R 4.4.1)\n xfun           0.51     2025-02-19 [1] CRAN (R 4.4.2)\n xml2           1.3.6    2023-12-04 [1] CRAN (R 4.4.0)\n xtable         1.8-4    2019-04-21 [1] CRAN (R 4.4.0)\n yaml           2.3.10   2024-07-26 [1] CRAN (R 4.4.1)\n zoo            1.8-12   2023-04-13 [1] CRAN (R 4.4.0)\n\n [1] C:/Users/pierces1/AppData/Local/R/win-library/4.4\n [2] C:/Program Files/R/R-4.4.2/library\n * ── Packages attached to the search path.\n\n──────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "MyStudy_Report.html#git-details",
    "href": "MyStudy_Report.html#git-details",
    "title": " \nMyStudy Report",
    "section": "6.2 Git Details",
    "text": "6.2 Git Details\nThe current Git commit details and status are:\n\n\nCode\ngit_report()\n\n\nLocal:    main C:/Users/pierces1/OneDrive - Michigan State University/CSTATRedirects/Documents/Professional/Presentations/CSTAT.RR2025\nRemote:   main @ origin (https://github.com/sjpierce/CSTAT.RR2025.git)\nHead:     [1846172] 2025-02-24: Rendered scripts.\n \n\n\nUntracked files:\n    Untracked:  MyStudy_Report.rmarkdown\n    Untracked:  MyStudy_Report_files/\n\nUnstaged changes:\n    Modified:   CSTAT_theme.scss\n    Modified:   MyStudy_Report.qmd\n    Modified:   Slides.qmd\n    Modified:   _brand.yml\n    Modified:   _quarto.yml\n    Modified:   output/MyStudy_Report.html\n    Modified:   output/Slides.html\n\n\nThis is useful because it tells us exactly which commit in the Git history we would need to be using to make sure we are running the exact same code. Sometimes another person is not using the most current code, or has changed the code in some way since it was last committed.\n\n\n\n\n\n\nTip\n\n\n\nUntracked files are files located in the repository that Git has not been told to entirely ignore, but have also not been commited into the version history.\nUnstaged changes to files indicate that some of the contents have been modified since the last time the file was committed to Git. For a final production run of a report, you want the Git output to not show any unstaged changes to key files!"
  }
]